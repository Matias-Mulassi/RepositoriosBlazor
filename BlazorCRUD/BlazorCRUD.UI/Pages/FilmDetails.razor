@page "/filmdetails"
@page "/filmdetails/{id:int}"


@using Model
@using Interfaces
@inject IFilmService FilmService
@inject NavigationManager NavigationManager


<h1>FilmDetails</h1>

<EditForm Model="@film">
    <table class="table">
        <tr>
            <td>Title:</td>
            <td><input type="text" @bind="film.Title" /></td>
        </tr>
        <tr>
            <td>Director:</td>
            <td><input type="text" @bind="film.Director" /></td>
        </tr>
        <tr>
            <td>Release Date:</td>
            <td><input type="text" @bind="film.ReleaseDate" /></td>
        </tr>
        <tr>
            <td colspan="2" style="text-align:center">
                <input type="submit" value="Save" @onclick="SaveFilm" />
                <input type="button" value="Cancel" @onclick="CancelFilm" />
            </td>
        </tr>
    </table>





</EditForm>

@code {

    [Parameter] // Cuando nos envian un Id
    public int id { get; set; } //Al enviarse un Id es necesario definir aca la propiedad


    Film film = new Film();

    protected void CancelFilm()
    {
        NavigationManager.NavigateTo("/filmlist");
    }

    protected async Task SaveFilm()
    {
        await FilmService.SaveFilm(film); //Necesario para insertar un film en la db
        NavigationManager.NavigateTo("/filmlist"); //Nos permite navegar por las distintas paginas

    }


    //Sobrescribimos un metodo del ciclo de vida

    protected async override Task OnInitializedAsync()
    {
        if (id == 0)
        {
            film.ReleaseDate = DateTime.Now;
        }
        else
        {
            film = await FilmService.GetDetails(id); //Busco el film por id. Luego de esto, todos los valores del film se llenaran
        }
    }

}
